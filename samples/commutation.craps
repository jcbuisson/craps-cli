// tâche 0 = comptage sur ld[3..0] ; tâche 1 = comptage sur ld[7..4]
// À chaque appui sur IT, changement de tâche

LD       =     0xb0000000
STACK0   =     0x100
STACK1   =     0x200

         ba    start
          
         .org  1
it:      // sauvegarde de tous les registres programmeur (ici seulement r1-r3)
         push  %r1
         push  %r2
         push  %r3
         // sauvegarde de sp dans tabsp[tasknum]
         ld    [%r0+tasknum], %r1
         st    %sp, [%r1+tabsp]
         // incrémentation modulo 2 de tasknum
         setq  1, %r2
         sub   %r2, %r1, %r1
         st    %r1, [%r0+tasknum]
         // lecture de sp dans tabsp[tasknum]
         ld    [%r1+tabsp], %sp
         // restauration de tous les registres programmeur (ici seulement r1-r3)
         pop   %r3
         pop   %r2
         pop   %r1
         reti

start:   // initialisation contexte tâche 1
         setq  STACK1, %sp
         setq  prog1, %r9
         push  %r9    // pc
         push  %r0    // flags
         push  %r0    // registre programmeur
         push  %r0    // registre programmeur
         push  %r0    // registre programmeur
         setq  tabsp, %r9
         st    %sp, [%r9+1]
         // démarrage sur la tâche 0
         setq  STACK0, %sp
         ba    prog0

// tâche 0
prog0:   set   LD, %r3
         clr   %r1
loop0:   inc   %r1
         sll   %r1, 8, %r2
         st    %r2, [%r3]
         ba    loop0

// tâche 1
prog1:   set   LD, %r3
         clr   %r1
loop1:   inc   %r1
         st    %r1, [%r3]
         ba    loop1

tasknum: .word 0                // numéro de la tâche courante (0 ou 1)
tabsp:   .word STACK0, STACK1   // table des pointeurs de pile
